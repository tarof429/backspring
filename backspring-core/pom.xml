<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.taro</groupId>
		<artifactId>backspring</artifactId>
		<version>1.0.6-SNAPSHOT</version>	
	</parent>

	<artifactId>backspring-core</artifactId>
	<name>BackSpring - Core</name>

	<properties>
		<staging.directory>${project.build.directory}/staging</staging.directory>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>

		<!-- Commons -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
		</dependency>

		<!-- Cron -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
		</dependency>
	
	</dependencies>


	<build>
		<plugins>
			<plugin>
			 	<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>process-test-resources</phase>
						<id>copy-footprint</id>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy toDir="${staging.directory}">
									<fileset dir="${project.basedir}/src/main/footprint" />
								</copy>
							</target>
						</configuration>
					</execution>
					<execution>
						<phase>process-test-resources</phase>
						<id>copy-generated-jsw-script</id>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy toDir="${staging.directory}">
									<fileset dir="${project.build.directory}/generated-resources/appassembler/jsw/backspring-main" />
								</copy>
							</target>
						</configuration>
					</execution>
					<execution>
						<phase>process-test-resources</phase>
						<id>copy-footprint-for-testing</id>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy toDir="${project.build.directory}/test">
									<fileset dir="${staging.directory}" />
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<configuration>
					<repositoryLayout>flat</repositoryLayout>
					<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
					<extraJvmArguments>-Dbasedir=.</extraJvmArguments>
					<extraJvmArguments>-Xms64m</extraJvmArguments>
					<extraJvmArguments>-Dlog4j.configurationFile=$BASEDIR/conf/log4j2.xml</extraJvmArguments>
					<configurationDirectory>conf</configurationDirectory>
					<assembleDirectory>${staging.directory}</assembleDirectory>
					<repositoryName>lib</repositoryName>
					<daemons>
						<daemon>
							<id>backspring-main</id>
							<mainClass>com.taro.backspring.Main</mainClass>
							<commandLineArguments>
								<commandLineArgument>start</commandLineArgument>
							</commandLineArguments>
							<platforms>
								<platform>jsw</platform>
							</platforms>
							<generatorConfigurations>
								<generatorConfiguration>
									<generator>jsw</generator>
									<includes>
										<include>linux-x86-64</include>
										<include>linux-x86-32</include>
									</includes>
									<configuration>
										<property>
											<name>set.default.REPO_DIR</name>
											<value>lib</value>
										</property>
										<property>
											<name>wrapper.java.additional.1</name>
											<value>-Dlog4j.configurationFile=./conf/log4j2.xml</value>
										</property>
										<property>
											<name>wrapper.logfile</name>
											<value>logs/wrapper.log</value>
										</property>
									</configuration>
								</generatorConfiguration>
							</generatorConfigurations>
						</daemon>
					</daemons>
				</configuration>
				<executions>
					<execution>
						<id>make-libs</id>
						<phase>package</phase>
						<goals>
							<goal>create-repository</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-jsw-scripts</id>
						<phase>process-classes</phase>
						<goals>
							<goal>generate-daemons</goal>
						</goals>
					</execution>
					<execution>
						<id>create-backup-lastrun</id>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
						<configuration>
							<programs>
						    	<program>
          						<mainClass>com.taro.backspring.BackupLastRun</mainClass>
          						<id>backup-last-run</id>
        					</program>
							</programs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<basedir>${project.build.directory}/test</basedir>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>${basedir}/src/main/assembly/src.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
